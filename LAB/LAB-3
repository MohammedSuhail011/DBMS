-- Lab Experiment 01: Implementation of DDL Commands in SQL for the given scenarios
-- STUDENT NAME: Mohammed Suhail
-- USN: 1RUA24BCA0051
-- SECTION: A

SELECT USER(), 
       @@hostname AS Host_Name, 
       VERSION() AS MySQL_Version, 
       NOW() AS Current_Date_Time;
-- OUTPUT : [ COPYPASTE OF THE OUTPUT in CSV Format and terminate with ; ]
/*'root@localhost', 'RVU-PC-018', '8.4.6', '2025-08-25 11:47:54'*/


-- Scenario: College Student Management System

-- CREATE AND LOAD THE database
-- Write your SQL query below Codespace:
CREATE DATABASE CollegeManagement;
USE CollegeManagement;

-- Task 1: Create the Tables under this system (min 5 tables)
  -- Table 01: Departments ( DepartmentID, DepartmentName, HOD,ContactEmail,PhoneNumber,Location )
  -- Table 02: Course (CourseID, CourseName,Credits,DepartmentID,Duration,Fee )
  -- Table 03: Students (StudentID,FirstName,LastName,Email,DateOfBirth,CourseID)
  -- Table 04: Faculty FacultyID,FacultyName,DepartmentID,Qualification,Email,PhoneNumber)
  -- Table 05: Enrollments (  EnrollmentID,StudentID,CourseID,Semester,Year,Grade)
-- Specify the Key (Primary and Foreign) for each table while creating


-- Write your SQL query below Codespace:
-- Table 01: Departments
CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY,
    DepartmentName VARCHAR(50),
    HOD VARCHAR(50),
    ContactEmail VARCHAR(50),
    PhoneNumber VARCHAR(15),
    Location VARCHAR(50)
);
DESC Departments;

CREATE TABLE Course (
    CourseID INT PRIMARY KEY,
    CourseName VARCHAR(50),
    Credits INT,
    DepartmentID INT,
    Duration INT,
    Fee DECIMAL(10,2),
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);
DESC Course;

CREATE TABLE Students (
    StudentID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(50),
    DateOfBirth DATE,
    CourseID INT,
    FOREIGN KEY (CourseID) REFERENCES Course(CourseID)
);
DESC Students;

CREATE TABLE Faculty (
    FacultyID INT PRIMARY KEY,
    FacultyName VARCHAR(50),
    DepartmentID INT,
    Qualification VARCHAR(50),
    Email VARCHAR(50),
    PhoneNumber VARCHAR(15),
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);
DESC Faculty;

CREATE TABLE Enrollments (
    EnrollmentID INT PRIMARY KEY,
    StudentID INT,
    CourseID INT,
    Semester INT,
    Year INT,
    Grade CHAR(2),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (CourseID) REFERENCES Course(CourseID)
);
DESC Enrollments;

-- [ COPYPASTE OF THE OUTPUT in CSV Format and terminate with ; ]
-- OUTPUT : Disclaimer - This code is not the part of the SQL Code
/*Table Departments;
'DepartmentID', 'int', 'NO', 'PRI', NULL, ''
'DepartmentName', 'varchar(50)', 'YES', '', NULL, ''
'HOD', 'varchar(50)', 'YES', '', NULL, ''
'ContactEmail', 'varchar(50)', 'YES', '', NULL, ''
'PhoneNumber', 'varchar(15)', 'YES', '', NULL, ''
'Location', 'varchar(50)', 'YES', '', NULL, ''*/

/*Table Course;
'CourseID', 'int', 'NO', 'PRI', NULL, ''
'CourseName', 'varchar(50)', 'YES', '', NULL, ''
'Credits', 'int', 'YES', '', NULL, ''
'DepartmentID', 'int', 'YES', 'MUL', NULL, ''
'Duration', 'int', 'YES', '', NULL, ''
'Fee', 'decimal(10,2)', 'YES', '', NULL, ''*/

/*Table Students;
'StudentID', 'int', 'NO', 'PRI', NULL, ''
'FirstName', 'varchar(50)', 'YES', '', NULL, ''
'LastName', 'varchar(50)', 'YES', '', NULL, ''
'Email', 'varchar(50)', 'YES', '', NULL, ''
'DateOfBirth', 'date', 'YES', '', NULL, ''
'CourseID', 'int', 'YES', 'MUL', NULL, ''*/

/*Table  Faculty;
'FacultyID', 'int', 'NO', 'PRI', NULL, ''
'FacultyName', 'varchar(50)', 'YES', '', NULL, ''
'DepartmentID', 'int', 'YES', 'MUL', NULL, ''
'Qualification', 'varchar(50)', 'YES', '', NULL, ''
'Email', 'varchar(50)', 'YES', '', NULL, ''
'PhoneNumber', 'varchar(15)', 'YES', '', NULL, ''*/

/*Table Enrollments;
'EnrollmentID', 'int', 'NO', 'PRI', NULL, ''
'StudentID', 'int', 'YES', 'MUL', NULL, ''
'CourseID', 'int', 'YES', 'MUL', NULL, ''
'Semester', 'int', 'YES', '', NULL, ''
'Year', 'int', 'YES', '', NULL, ''
'Grade', 'char(2)', 'YES', '', NULL, ''*/


--  describe the structure of each table and copy paste the Output 

-- Perform the following operations on the each of the tables

-- 01: add 2 new columns for each table
ALTER TABLE Departments ADD EstablishedYear INT, ADD Website VARCHAR(100);
ALTER TABLE Course ADD Mode VARCHAR(20), ADD Language VARCHAR(30);
ALTER TABLE Students ADD Address VARCHAR(100), ADD Gender CHAR(1);
ALTER TABLE Faculty ADD JoiningDate DATE, ADD OfficeLocation VARCHAR(50);
ALTER TABLE Enrollments ADD Status VARCHAR(20), ADD Remarks TEXT;

-- 02: Modify the existing column from each table
ALTER TABLE Students MODIFY FirstName VARCHAR(60);
ALTER TABLE Course MODIFY Fee DECIMAL(12,2);
ALTER TABLE Departments MODIFY Location VARCHAR(80);
ALTER TABLE Faculty MODIFY FacultyName VARCHAR(60);
ALTER TABLE Enrollments MODIFY Grade VARCHAR(3);

-- 03 change the datatypes
ALTER TABLE Students MODIFY FirstName TEXT;
ALTER TABLE Faculty MODIFY PhoneNumber BIGINT;

-- 04: Rename a column
ALTER TABLE Faculty RENAME COLUMN Qualification TO Degree;

-- 05: Drop a column
ALTER TABLE Departments DROP COLUMN PhoneNumber;
ALTER TABLE Students DROP COLUMN Email;
ALTER TABLE Course DROP COLUMN Duration;

-- 06: Rename the table
RENAME TABLE Faculty TO Teachers;

-- 07: describe the structure of the new table
DESC Departments;
DESC Course;
DESC Students;
DESC Teachers;
DESC Enrollments;


/*  Additional set of questions 
--1 Add a new column Address (VARCHAR(100)) to the Students table.
--Completed

--2 Add a column Gender (CHAR(1)) to the Students table.*/
Alter table Students ADD Gender CHAR(1);

/*--3 Add a column JoiningDate (DATE) to the Faculty table.*/
Alter Table Faculty Add JoiningDate Date;

/* --4 Modify the column CourseName in the Courses table to increase its size from VARCHAR(50) to VARCHAR(100).
--Completed

--5 Modify the column Location in the Departments table to VARCHAR(80).*/
ALTER TABLE Departments MODIFY Location VARCHAR(80);

/*--6 Rename the column Qualification in the Faculty table to Degree.
--Completed

--7 Rename the table Faculty to Teachers.
--Completed

--8 Drop the column PhoneNumber from the Departments table.
--completed

--9 Drop the column Email from the Students table.
--Completed

--10 Drop the column Duration from the Courses table.
--completed
*/

SHOW TABLES; -- Before dropping the table


-- Write your SQL query below Codespace:\
/*'course'
'departments'
'enrollments'
'faculty'
'students'*/

-- Drop the 'Courses' and 'Enrollments' tables from the database.
DROP TABLE course;
DROP TABLE Enrollments;




SHOW TABLES; -- After dropping the table Enrollement and Course
/*'course'
'departments'
'faculty'
'students'
"Dropping the course table is not permitted as it is referenced by a foreign key in the student table, which enforces referential integrity."


-- Note: Perform the specified operations on all the 5 tables in the system
-- End of Lab Experiment 01
-- Upload the Completed worksheet in the google classroom with file name USN _ LabScenario01
